name: CD - Continuous Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Backend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/research-assistant-backend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/research-assistant-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Dashboard image
      uses: docker/build-push-action@v5
      with:
        context: ./dashboard
        file: ./dashboard/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/research-assistant-dashboard:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/research-assistant-dashboard:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
      continue-on-error: true
    
    - name: Deploy to DigitalOcean
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USERNAME }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        script: |
          cd /opt/research-assistant || mkdir -p /opt/research-assistant && cd /opt/research-assistant
          
          # Create docker-compose.yml for production
          cat > docker-compose.prod.yml << 'EOF'
          version: '3.8'
          services:
            backend:
              image: ${{ secrets.DOCKERHUB_USERNAME }}/research-assistant-backend:latest
              container_name: research-assistant-api
              ports:
                - "8000:8000"
              environment:
                - PYTHONUNBUFFERED=1
                - SEMANTIC_SCHOLAR_API_KEY=${{ secrets.SEMANTIC_SCHOLAR_API_KEY }}
              restart: unless-stopped
              networks:
                - research-network
            
            dashboard:
              image: ${{ secrets.DOCKERHUB_USERNAME }}/research-assistant-dashboard:latest
              container_name: research-assistant-dashboard
              ports:
                - "5000:5000"
              environment:
                - BACKEND_API_URL=http://backend:8000
                - FLASK_ENV=production
              depends_on:
                - backend
              restart: unless-stopped
              networks:
                - research-network
          
          networks:
            research-network:
              driver: bridge
          EOF
          
          # Pull latest images
          docker-compose -f docker-compose.prod.yml pull
          
          # Stop old containers
          docker-compose -f docker-compose.prod.yml down
          
          # Start new containers
          docker-compose -f docker-compose.prod.yml up -d
          
          # Clean up
          docker image prune -f
          
          echo "âœ… Deployment completed!"
    
    - name: Health check
      run: |
        sleep 15
        echo "ðŸš€ Deployment successful!"
        echo "Backend API: http://${{ secrets.DIGITALOCEAN_HOST }}:8000"
        echo "Dashboard: http://${{ secrets.DIGITALOCEAN_HOST }}:5000"